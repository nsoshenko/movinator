{"version":3,"sources":["utils/cookies.ts","components/InstallationHint.tsx","components/ModalWithButtons.tsx","utils/api.ts","pages/Home.tsx","components/Divider.tsx","components/Header.tsx","components/OptionBox.tsx","types/types.ts","pages/Question.tsx","pages/Result.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["setCookieWithExpiration","key","value","ttl","cookie","expiration","Date","now","localStorage","setItem","JSON","stringify","getCookieWithExpirationCheck","item","getItem","parse","removeItem","InstallationHint","closeInstallationHintHandler","useState","window","matchMedia","matches","isLandscape","setIsLandscape","isChecked","setIsChecked","desktopInstallIcon","src","process","alt","desktopManualText","mobileInstallationIcon","mobileManualText","handleOrientationChange","isPrevOrientationLandscape","useEffect","addEventListener","removeEventListener","className","onClick","onSubmit","e","preventDefault","okOnClickHandler","htmlFor","type","name","id","checked","onChange","SessionModal","modalText","buttons","map","index","style","marginTop","undefined","button","text","onClickHandler","movinatorApiUrl","Home","history","useHistory","showSessionModal","setShowSessionModal","isSessionFinished","setIsSessionFinished","showInstallationHint","setShowInstallationHint","a","sessionId","axios","post","response","status","sessionData","data","finished","console","error","log","checkExistingSession","neverShowInstallationHint","isIOS","redirectHandler","route","push","ModalWithButtons","backgroundImage","Divider","children","Header","OptionBox","backgroundUrl","isResultResponse","result","Question","apiUrl","questionData","setQuestionData","optionNames","setOptionNames","optionPictures","setOptionPictures","showErrorModal","setShowErrorModal","fetchQuestion","useCallback","answerData","processQuestionResponse","question","options","option","imageUrl","Math","ceil","random","get","responseData","sendAnswer","optionName","answer","selected","length","Result","setResult","showSuggestionModal","setShowSuggestionModal","fetchResult","fetchSimilarMovie","calculateTitleFontSize","title","backdrop_path","fontSize","release_date","getFullYear","floor","runtime","tagline","vote_count","vote_average","navigator","clipboard","writeText","director","cast","slice","arr","overview","App","basename","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cbdcb575.chunk.js","sourcesContent":["type Cookie = {\n  value: string;\n  expiration: number;\n};\n\nexport const setCookieWithExpiration = (\n  key: string,\n  value: string,\n  ttl: number\n): void => {\n  const cookie: Cookie = {\n    value: value,\n    expiration: Date.now() + ttl,\n  };\n  localStorage.setItem(key, JSON.stringify(cookie));\n};\n\nexport const getCookieWithExpirationCheck = (\n  key: string\n): string | undefined => {\n  const item = localStorage.getItem(key);\n  if (!item) return undefined;\n  const cookie = JSON.parse(item) as Cookie;\n\n  if (Date.now() > cookie.expiration) {\n    localStorage.removeItem(key);\n    return undefined;\n  }\n\n  return cookie.value;\n};\n","import { FC, FormEvent, useEffect, useState } from \"react\";\nimport { BrowserView, MobileView } from \"react-device-detect\";\nimport { setCookieWithExpiration } from \"../utils/cookies\";\n\ntype InstallationHintProps = {\n  closeInstallationHintHandler: () => void;\n};\n\nconst InstallationHint: FC<InstallationHintProps> = ({\n  closeInstallationHintHandler,\n}) => {\n  const [isLandscape, setIsLandscape] = useState(\n    window.matchMedia(\"(orientation: landscape)\").matches\n  );\n  const [isChecked, setIsChecked] = useState(false);\n\n  const desktopInstallIcon = (\n    <img src={process.env.PUBLIC_URL + \"/install.png\"} alt=\"install\" />\n  );\n  const desktopManualText = [\n    <li key=\"0\">Add this app to your home screen for easy access</li>,\n    <li key=\"1\">\n      The download button is on the right side of the address bar\n    </li>,\n    <li key=\"2\">Click {desktopInstallIcon}, then \"Install\"</li>,\n    <li key=\"3\">An app shortcut will be created on the home screen</li>,\n  ];\n\n  const mobileInstallationIcon = (\n    <img src={process.env.PUBLIC_URL + \"/installMobile.png\"} alt=\"install\" />\n  );\n  const mobileManualText = [\n    <li key=\"0\">Add this app to your home screen for easy access</li>,\n    <li key=\"1\">Click {mobileInstallationIcon}, then \"Add to home screen\"</li>,\n    <li key=\"2\">Enter the name for the shortcut and tap \"Add\"</li>,\n    <li key=\"3\">An app shortcut will be created on the home screen</li>,\n  ];\n\n  // Currently works only for mobile\n  const handleOrientationChange = () => {\n    const isPrevOrientationLandscape = window.matchMedia(\n      \"(orientation: landscape)\"\n    ).matches;\n    isPrevOrientationLandscape ? setIsLandscape(false) : setIsLandscape(true);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"orientationchange\", handleOrientationChange);\n    return () =>\n      window.removeEventListener(\"orientationchange\", handleOrientationChange);\n  }, []);\n\n  const okOnClickHandler = (e: FormEvent) => {\n    e.preventDefault();\n    if (isChecked)\n      setCookieWithExpiration(\n        \"neverShowInstallationHint\",\n        \"true\",\n        1000 * 60 * 60 * 24 * 90\n      );\n    closeInstallationHintHandler();\n  };\n\n  return (\n    <div className=\"installationHint unselectable\">\n      {isLandscape && (\n        <img\n          className=\"closeButton\"\n          src={process.env.PUBLIC_URL + \"/close.png\"}\n          alt=\"close\"\n          onClick={closeInstallationHintHandler}\n        />\n      )}\n      <div className=\"contentWrapper\">\n        <ol>\n          <BrowserView>{desktopManualText}</BrowserView>\n          <MobileView>{mobileManualText}</MobileView>\n        </ol>\n        <form onSubmit={(e) => okOnClickHandler(e)}>\n          <label htmlFor=\"remember\">\n            <input\n              type=\"checkbox\"\n              name=\"remember\"\n              id=\"remember\"\n              checked={isChecked}\n              onChange={() => setIsChecked(!isChecked)}\n            />{\" \"}\n            I want to always use the app in browser\n          </label>\n          <button type=\"submit\" className=\"circleButton\">\n            OK\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InstallationHint;\n","import { FC } from \"react\";\n\n// type SessionModalProps = {\n//   yesOnClickHandler: () => void;\n//   noOnClickHandler: () => void;\n// };\n\ntype ModalButton = {\n  text: string;\n  onClickHandler: () => void;\n};\n\ntype SessionModalProps = {\n  modalText: string | string[];\n  buttons: ModalButton[];\n};\n\nconst SessionModal: FC<SessionModalProps> = ({ modalText, buttons }) => {\n  return (\n    <div className=\"sessionModal unselectable\">\n      <div className=\"sessionModalContent\">\n        <img\n          src={process.env.PUBLIC_URL + \"/clapperboard.png\"}\n          alt=\"clapperboardIcon\"\n        />\n        {typeof modalText === \"string\" ? (\n          <p>{modalText}</p>\n        ) : (\n          modalText.map((item, index) => (\n            <p key={index} style={{ marginTop: index > 0 ? 0 : undefined }}>\n              {item}\n            </p>\n          ))\n        )}\n        <div className=\"buttonsWrapper\">\n          {buttons.map((button, index) => (\n            <button\n              key={index}\n              id={`${button.text}ButtonSessionModal`}\n              onClick={button.onClickHandler}\n            >\n              {button.text}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SessionModal;\n","export const movinatorApiUrl = \"https://movinator.lhr.rocks/api\";\n","import axios from \"axios\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { isIOS } from \"react-device-detect\";\nimport InstallationHint from \"../components/InstallationHint\";\nimport ModalWithButtons from \"../components/ModalWithButtons\";\nimport { SessionStageResponse } from \"../types/types\";\nimport { movinatorApiUrl } from \"../utils/api\";\nimport { getCookieWithExpirationCheck } from \"../utils/cookies\";\n\nconst Home: FC = () => {\n  const history = useHistory();\n\n  const [showSessionModal, setShowSessionModal] = useState(false);\n  const [isSessionFinished, setIsSessionFinished] = useState(false);\n  const [showInstallationHint, setShowInstallationHint] = useState(false);\n\n  useEffect(() => {\n    // Check session to trigger session modal if needed\n    const checkExistingSession = async () => {\n      const sessionId = getCookieWithExpirationCheck(\"sessionId\");\n      if (sessionId) {\n        try {\n          const response = await axios.post(movinatorApiUrl + \"/check\", {\n            sessionId: sessionId,\n          });\n          if (response.status === 200) {\n            setShowSessionModal(true);\n            const sessionData = response.data as SessionStageResponse;\n            if (sessionData) {\n              if (sessionData.finished) setIsSessionFinished(true);\n            }\n          }\n        } catch (err) {\n          console.error(err);\n          console.log(\"Removing session cookie as expired\");\n          localStorage.removeItem(\"sessionId\");\n        }\n      }\n    };\n    checkExistingSession();\n\n    // Check device to trigger install hint if needed\n    const neverShowInstallationHint = getCookieWithExpirationCheck(\n      \"neverShowInstallationHint\"\n    );\n    if (isIOS) {\n      const installed = window.matchMedia(\"(display-mode: standalone)\").matches;\n      if (!installed && !neverShowInstallationHint)\n        setShowInstallationHint(true);\n    } else {\n      window.addEventListener(\"beforeinstallprompt\", () => {\n        if (!getCookieWithExpirationCheck(\"neverShowInstallationHint\"))\n          setShowInstallationHint(true);\n      });\n    }\n  }, []);\n\n  const appTitle = \"Movinator\";\n  const appDescription =\n    \"Movinator is an application that will help you choose a movie to watch, based on your preferences\";\n\n  const redirectHandler = (route: \"/question\" | \"/result\") => {\n    history.push(route);\n  };\n\n  const yesOnClickHandler = () =>\n    isSessionFinished\n      ? redirectHandler(\"/result\")\n      : redirectHandler(\"/question\");\n\n  const noOnClickHandler = () => {\n    localStorage.removeItem(\"sessionId\");\n    setShowSessionModal(false);\n  };\n\n  const closeInstallationHintHandler = () => {\n    setShowInstallationHint(false);\n  };\n\n  const startOnClick = () => redirectHandler(\"/question\");\n\n  return (\n    <>\n      {showSessionModal && (\n        <ModalWithButtons\n          modalText=\"Want to continue your last session?\"\n          buttons={[\n            {\n              text: \"Yes\",\n              onClickHandler: yesOnClickHandler,\n            },\n            {\n              text: \"No\",\n              onClickHandler: noOnClickHandler,\n            },\n          ]}\n        />\n      )}\n      {showInstallationHint && (\n        <InstallationHint\n          closeInstallationHintHandler={closeInstallationHintHandler}\n        />\n      )}\n      <div\n        className=\"container flex-column with-image-background unselectable\"\n        style={{\n          backgroundImage: `linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${\n            process.env.PUBLIC_URL + \"/home_background_2.jpg\"\n          })`,\n        }}\n      >\n        <div className=\"title-wrapper\">{appTitle}</div>\n        <div className=\"description-wrapper\">\n          <div className=\"size-description-wrapper\">{appDescription}</div>\n        </div>\n        <div className=\"start-button-wrapper\">\n          <button type=\"button\" id=\"start-button\" onClick={startOnClick}>\n            Start\n          </button>\n        </div>\n      </div>\n      <div className=\"footer\"></div>\n    </>\n  );\n};\n\nexport default Home;\n","import { FC } from \"react\";\n\ntype DividerProps = {\n  onClickHandler: (value: string) => Promise<void>;\n  children: string;\n};\n\nconst Divider: FC<DividerProps> = ({ children, onClickHandler }) => {\n  const handleClick = (): void => {\n    onClickHandler(children);\n  };\n  return (\n    <div className=\"divider\">\n      <button className=\"circleButton\" id=\"other-button\" onClick={handleClick}>\n        {children}\n      </button>\n    </div>\n  );\n};\n\nexport default Divider;\n","import { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Header: FC = () => {\n  const history = useHistory();\n\n  const handleClick = (): void => {\n    localStorage.removeItem(\"sessionId\");\n    history.push(\"/\");\n  };\n  return (\n    <header>\n      <img\n        className=\"home-button\"\n        src={process.env.PUBLIC_URL + \"/home.png\"}\n        alt=\"home\"\n        onClick={handleClick}\n      ></img>\n      Movinator\n    </header>\n  );\n};\n\nexport default Header;\n","import { FC } from \"react\";\n\ntype OptionBoxProps = {\n  backgroundUrl: string;\n  onClickHandler: (value: string) => Promise<void>;\n  children: string;\n  id?: string;\n};\n\nconst OptionBox: FC<OptionBoxProps> = ({\n  backgroundUrl,\n  onClickHandler,\n  children,\n  id,\n}) => {\n  const handleClick = (): void => {\n    onClickHandler(children);\n  };\n\n  return (\n    <div\n      className=\"option-box\"\n      style={{ backgroundImage: `url(${backgroundUrl})` }}\n      onClick={handleClick}\n      id={id}\n    >\n      <div className=\"text-container unselectable\">{children}</div>\n    </div>\n  );\n};\n\nexport default OptionBox;\n","type ApiResponse = {\n  sessionId: string;\n};\n\nexport type SessionStageResponse = ApiResponse & {\n  finished: boolean;\n};\n\nexport type QuestionResponse = ApiResponse & {\n  question: Question;\n};\n\nexport type ResultResponse = ApiResponse & {\n  result: MovieDetails;\n};\n\nexport const isResultResponse = (\n  response: QuestionResponse | ResultResponse\n): response is ResultResponse =>\n  (response as ResultResponse).result !== undefined;\n\nexport type MovieDetails = {\n  adult: boolean;\n  backdrop_path: string;\n  belongs_to_collection: number[];\n  budget: number;\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  production_countries: string[];\n  release_date: string;\n  revenue: number;\n  runtime: number;\n  status: string;\n  tagline: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n  genre_ids: number[];\n  production_company_ids: number[];\n  cast: number[];\n  crew: number[];\n  keyword_ids: number[];\n  director: string;\n};\n\ntype Question = {\n  id: number;\n  type: QuestionType;\n  options: [FormattedOption, FormattedOption, FormattedOption];\n};\n\ntype QuestionType =\n  | \"genres\"\n  | \"years\"\n  | \"ratings\"\n  | \"cast\"\n  | \"crew\"\n  | \"languages\"\n  | \"production_companies\"\n  | \"keywords\";\n\ntype FormattedOption = Option & {\n  selected: boolean;\n};\n\ntype Option = {\n  id: string | number;\n  name: string;\n  imageUrl?: string;\n  selected?: boolean;\n};\n","import axios from \"axios\";\nimport { FC, useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Divider from \"../components/Divider\";\nimport Header from \"../components/Header\";\nimport ModalWithButtons from \"../components/ModalWithButtons\";\nimport OptionBox from \"../components/OptionBox\";\nimport {\n  isResultResponse,\n  QuestionResponse,\n  ResultResponse,\n} from \"../types/types\";\nimport { movinatorApiUrl } from \"../utils/api\";\nimport {\n  getCookieWithExpirationCheck,\n  setCookieWithExpiration,\n} from \"../utils/cookies\";\n\nconst Question: FC = () => {\n  const apiUrl = movinatorApiUrl + \"/question\";\n  const imageUrl = \"https://image.tmdb.org/t/p/w780\";\n  const history = useHistory();\n\n  const [questionData, setQuestionData] = useState<QuestionResponse>();\n  const [optionNames, setOptionNames] = useState<string[]>();\n  const [optionPictures, setOptionPictures] = useState<string[]>([\"\", \"\"]);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n\n  const fetchQuestion = useCallback(\n    async (sessionId?: string, answerData?: QuestionResponse) => {\n      const processQuestionResponse = (response: QuestionResponse) => {\n        setCookieWithExpiration(\n          \"sessionId\",\n          response.sessionId,\n          1000 * 60 * 10\n        );\n        const question = response.question;\n        const choosePlaceholderImage = (type: string) => {\n          if (type === \"cast\")\n            return `${type}_00${Math.ceil(Math.random() * 4)}.jpg`;\n          return `${type}.jpg`;\n        };\n        setQuestionData(response);\n        setOptionNames(question.options.map((option) => option.name));\n        setOptionPictures(\n          question.options.map((option) =>\n            option.imageUrl\n              ? imageUrl + option.imageUrl\n              : `/placeholders/${choosePlaceholderImage(question.type)}`\n          )\n        );\n      };\n\n      try {\n        if (!sessionId) {\n          const response = await axios.get(apiUrl);\n          const responseData = response.data as QuestionResponse;\n          processQuestionResponse(responseData);\n        } else {\n          console.log(answerData);\n          const response = await axios.post(apiUrl, {\n            sessionId: sessionId,\n            question: answerData?.question,\n          });\n          const responseData = response.data as unknown as\n            | QuestionResponse\n            | ResultResponse;\n          if (isResultResponse(responseData)) history.push(\"result\");\n          else processQuestionResponse(responseData);\n        }\n      } catch (err) {\n        console.log(err);\n        setShowErrorModal(true);\n      }\n    },\n    [history, apiUrl]\n  );\n\n  useEffect(() => {\n    const sessionId = getCookieWithExpirationCheck(\"sessionId\");\n    fetchQuestion(sessionId);\n  }, [fetchQuestion]);\n\n  const sendAnswer = async (optionName: string): Promise<void> => {\n    const answer = { ...questionData };\n    const sessionId = getCookieWithExpirationCheck(\"sessionId\");\n    if (sessionId !== answer.sessionId) {\n      localStorage.removeItem(\"sessionId\");\n      history.push(\"/\");\n    }\n    if (answer) {\n      for (const option of answer.question!.options) {\n        if (option.name === optionName) option.selected = true;\n      }\n    }\n    await fetchQuestion(answer.sessionId, answer as QuestionResponse);\n  };\n\n  return (\n    <>\n      {showErrorModal && (\n        <ModalWithButtons\n          modalText={[\n            \"Something went wrong\",\n            \"You will be redirected to the homepage\",\n          ]}\n          buttons={[\n            {\n              text: \"OK\",\n              onClickHandler: () => history.push(\"/\"),\n            },\n          ]}\n        />\n      )}\n      <Header />\n      <div className=\"container after-header\">\n        {optionNames && optionNames.length === 3 ? (\n          <>\n            <OptionBox\n              backgroundUrl={optionPictures[0]}\n              onClickHandler={sendAnswer}\n            >\n              {optionNames[0]}\n            </OptionBox>\n            <Divider onClickHandler={sendAnswer}>{optionNames[2]}</Divider>\n            <OptionBox\n              backgroundUrl={optionPictures[1]}\n              onClickHandler={sendAnswer}\n              id=\"ob2\"\n            >\n              {optionNames[1]}\n            </OptionBox>\n          </>\n        ) : (\n          <div>No question was fetched</div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Question;\n","import axios from \"axios\";\nimport { FC, useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport ModalWithButtons from \"../components/ModalWithButtons\";\nimport { MovieDetails, QuestionResponse, ResultResponse } from \"../types/types\";\nimport { movinatorApiUrl } from \"../utils/api\";\nimport {\n  getCookieWithExpirationCheck,\n  setCookieWithExpiration,\n} from \"../utils/cookies\";\n\nconst Result: FC = () => {\n  const imageUrl = \"https://image.tmdb.org/t/p/w1280\";\n  const history = useHistory();\n\n  const [result, setResult] = useState<MovieDetails>();\n  const [showSuggestionModal, setShowSuggestionModal] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n\n  const fetchResult = useCallback(\n    async (sessionId: string) => {\n      try {\n        const response = await axios.post(movinatorApiUrl + \"/question\", {\n          sessionId: sessionId,\n        });\n        const responseData = response.data as unknown as ResultResponse;\n        setCookieWithExpiration(\n          \"sessionId\",\n          responseData.sessionId,\n          1000 * 60 * 10\n        );\n        if ((responseData as unknown as QuestionResponse).question)\n          history.push(\"/question\");\n        setResult(responseData.result);\n      } catch (err) {\n        console.log(err);\n        setShowErrorModal(true);\n      }\n    },\n    [history]\n  );\n\n  // Refactor it for DRY, please\n  const fetchSimilarMovie = useCallback(async (sessionId: string) => {\n    try {\n      const response = await axios.post(movinatorApiUrl + \"/similar\", {\n        sessionId: sessionId,\n      });\n      const responseData = response.data as unknown as ResultResponse;\n      setCookieWithExpiration(\n        \"sessionId\",\n        responseData.sessionId,\n        1000 * 60 * 10\n      );\n      setResult(responseData.result);\n    } catch {\n      setShowSuggestionModal(true);\n    }\n  }, []);\n\n  const handleSimilarMoviesClick = (): void => {\n    const sessionId = getCookieWithExpirationCheck(\"sessionId\");\n    if (sessionId) fetchSimilarMovie(sessionId);\n    else setShowErrorModal(true);\n  };\n\n  const yesOnClickHandler = (): void => {\n    localStorage.removeItem(\"sessionId\");\n    history.push(\"/question\");\n  };\n\n  const noOnClickHandler = (): void => setShowSuggestionModal(false);\n\n  const choosePlaceholderPicture = (): string =>\n    process.env.PUBLIC_URL +\n    `/placeholders/movies_00${Math.ceil(Math.random() * 4)}.jpg`;\n\n  const calculateTitleFontSize = (title: string): string => {\n    // const screenOrientation = window.matchMedia(\"(orientation: landscape)\");\n    // const measureUnits = screenOrientation.matches ? \"vw\" : \"vh\";\n\n    if (title.length <= 10) return 7.5 + \"vmax\";\n    if (title.length <= 30) return 3.5 + \"vmax\";\n    return 2 + \"vmax\";\n  };\n\n  useEffect(() => {\n    const sessionId = getCookieWithExpirationCheck(\"sessionId\");\n    if (sessionId) fetchResult(sessionId);\n    else history.push(\"/\");\n  }, [fetchResult, history]);\n\n  return (\n    <>\n      {showSuggestionModal && (\n        <ModalWithButtons\n          modalText={[\n            \"No similar movies left\",\n            \"Would you like to start a new session?\",\n          ]}\n          buttons={[\n            {\n              text: \"Yes\",\n              onClickHandler: yesOnClickHandler,\n            },\n            {\n              text: \"No\",\n              onClickHandler: noOnClickHandler,\n            },\n          ]}\n        />\n      )}\n      {showErrorModal && (\n        <ModalWithButtons\n          modalText={[\n            \"Something went wrong\",\n            \"You will be redirected to the homepage\",\n          ]}\n          buttons={[\n            {\n              text: \"OK\",\n              onClickHandler: () => history.push(\"/\"),\n            },\n          ]}\n        />\n      )}\n      {result && (\n        <>\n          <Header />\n          <div className=\"container flex-column-reverse after-header\">\n            <div\n              className=\"image-container\"\n              style={\n                result.backdrop_path\n                  ? {\n                      backgroundImage: `url(${\n                        imageUrl + result.backdrop_path\n                      })`,\n                    }\n                  : {\n                      backgroundImage: `linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('${choosePlaceholderPicture()}')`,\n                    }\n              }\n            >\n              <div className=\"image-title-info-wrapper\">\n                <span\n                  style={{\n                    fontSize: `${calculateTitleFontSize(result.title)}`,\n                  }}\n                  className=\"title\"\n                >\n                  {result.title}\n                </span>{\" \"}\n                <h2 className=\"text-margin-top\">\n                  {new Date(result.release_date).getFullYear()} |\n                  {Math.floor(result.runtime / 60)}h {result.runtime % 60}m |{\" \"}\n                  {result.tagline}\n                </h2>\n                {result.vote_count > 0 && (\n                  <h2 className=\"text-margin-top\">\n                    TMDB: {result.vote_average} ({result.vote_count})\n                  </h2>\n                )}\n              </div>\n            </div>\n            <div className=\"bottom-box\">\n              <div className=\"info-container\">\n                <div className=\"bottom-title-info-wrapper\">\n                  <span\n                    style={{\n                      fontSize: `${calculateTitleFontSize(result.title)}`,\n                    }}\n                    className=\"title\"\n                    onClick={() => navigator.clipboard.writeText(result.title)}\n                  >\n                    {result.title}\n                  </span>\n                  <h2 className=\"text-margin-top\">\n                    {new Date(result.release_date).getFullYear()} |\n                    {Math.floor(result.runtime / 60)}h {result.runtime % 60}m\n                    {result.tagline.length > 0 && \"|\"} {result.tagline}\n                  </h2>\n                  {result.vote_count > 0 && (\n                    <h2 className=\"text-margin-top\">\n                      TMDB: {result.vote_average} ({result.vote_count})\n                    </h2>\n                  )}\n                </div>\n                <div className=\"cast-wrapper\">\n                  {result.director && (\n                    <p className=\"text-margin-top\">\n                      Director: {result.director}\n                    </p>\n                  )}\n                  {result.cast.length > 0 && (\n                    <p className=\"text-margin-top\">\n                      Cast of actors:{\" \"}\n                      {result.cast.slice(0, 10).map((item, index, arr) => {\n                        return index !== arr.length - 1\n                          ? `${item}, `\n                          : `${item}`;\n                      })}\n                    </p>\n                  )}\n                </div>\n              </div>\n              <div className=\"description-container\">\n                <div className=\"description-text-wrapper\">\n                  <p>{result.overview}</p>\n                </div>\n                <div className=\"button-container\">\n                  <div className=\"button-label\">Similar movie</div>\n                  <button\n                    id=\"similar-button\"\n                    onClick={handleSimilarMoviesClick}\n                  ></button>\n                </div>\n              </div>\n            </div>\n          </div>{\" \"}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Result;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Question from \"./pages/Question\";\nimport Result from \"./pages/Result\";\n\nfunction App() {\n  return (\n    <>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/question\">\n            <Question />\n          </Route>\n          <Route path=\"/result\">\n            <Result />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}